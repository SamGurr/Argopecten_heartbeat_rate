# INTIAL  -
rm(list=ls()) # remove all data - start fresh
# Install packages if not already in your library-----------------------------------------------------------------------------------------------
require(car) # get the right sums of squares calculations
require(dplyr) # for manipulating our data
require(ggplot2) # for plotting and for our dataset
require(sjstats) # save us time computing key ANOVA stats beyond car
require(broom) # nice for making our results in neat tibbles
require(emmeans) # for marginal means calculations
# Load packages and pacage version/date/import/depends info
library(dplyr) # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(lsmeans) # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
library(ggpubr)
library(reshape2)
library(broom)
library(mvnormtest)
library(rlang)
library(car)
library(sjstats)
library(CGPfunctions)
library(rstatix)
library(ez)
#set working directory -------------------------------------------------------------- #
setwd("C:/Users/samjg/Documents/My_Projects/Argopecten_hearbeat_rate/Argopecten_heartbeat_rate/RAnalysis/")
HB.24hr.hypoxia <- read.csv(file="Data/Post_insitu_experiment/Heartbeat_data/SUMMARY/24-hour_hb_response/Summary_24_hour_exposure.csv", header=T) # full 24 hour mean data (every 10 minutes)  of O2 <= 2.0 mg L-1
# 24 PROLONGED HYPOXIA -------------------------------------------------------------- #
HB.24hr.hypoxia # view data
HB.24hr.hypoxia.OM <-  na.omit(HB.24hr.hypoxia)
HB.24hr.hypoxia.OM <-  melt(HB.24hr.hypoxia.OM, id.vars=c("Site", "hb_sensor", "treatment", "block"))
HB.24hr.hypoxia.OM  <- HB.24hr.hypoxia.OM  %>% dplyr::select(-block) # ommit sensor and block
HB.24hr.hypoxia.2 <- melt(HB.24hr.hypoxia, id.vars=c("Site", "hb_sensor", "treatment", "block")) # melt into a vertical dataset 'variable' = time; 'value' = heartbeat rate
HB.24hr.hypoxia.2 <- HB.24hr.hypoxia.2 %>% dplyr::select(-hb_sensor, -block) # ommit sensor and block
#####
# RECOVERY -------------------------------------------------------------- #
# call the first hour of hypoxia
HB.hr.O2.increase <- HB.last.TWOhours %>%  dplyr::select(Site, hb_sensor, treatment, block, min_10, min_20, min_30, min_40, min_50, min_60) # data from the termination of 24 hour hypoxia; hour of O2 INCREASE to 6.0 mg L-1 (every 10 minutes)
# RUN  ON SITES INDIVIDUALLY
HB.24hr.hypoxia # view data
HB.24hr.hypoxia.TEST <-  melt(HB.24hr.hypoxia, id.vars=c("Site", "hb_sensor", "treatment", "block"))
HB.24hr.hypoxia.TEST <-  na.omit(HB.24hr.hypoxia.TEST)
HB.24hr.hypoxia.TEST  <- HB.24hr.hypoxia.TEST  %>% dplyr::select(-block) # ommit sensor and block
HB.24hr.hypoxia.TEST$Subject_ID <- paste(HB.24hr.hypoxia.TEST$Site,
HB.24hr.hypoxia.TEST$hb_sensor, sep ="_")
HB.24hr.hypoxia.TEST$Subject_ID <- as.factor(HB.24hr.hypoxia.TEST$Subject_ID)
# Fire island
FI_24hr <- HB.24hr.hypoxia.TEST %>% dplyr::filter(Site %in% "FI") # used dplyr to filter for FI
FI_24hr$Subject_ID <- as.factor(FI_24hr$Subject_ID)
sapply(FI_24hr, class)
colnames(FI_24hr)[5] <- "heartbeat"
colnames(FI_24hr)[4] <- "time"
ggboxplot(FI_24hr, x = "time", y = "heartbeat", color = "treatment")
table(FI_24hr$treatment, FI_24hr$time)
ggqqplot(FI_24hr, "heartbeat", ggtheme = theme_bw()) + facet_grid(time ~ treatment, labeller = "label_both")
FI_24hr %>% group_by(treatment, time) %>% identify_outliers(heartbeat) # ID outliers
Shapiro_FI<-FI_24hr %>% rstatix::group_by(treatment,time) %>% rstatix::shapiro_test(heartbeat) # shapiro test
lm(heartbeat~Subject_ID+time:treatment,data=FI_24hr)
FIres.aov <- rstatix::anova_test(data = FI_24hr,
dv = heartbeat,
wid = Subject_ID,
within = c(treatment, time),
type=1)
FIres.aov
ile for details
rm(list=ls()) #clears workspace
# upload libraries
library(ggplot2)
library(tidyr)
library(dplyr)
# Set Working Directory:
setwd("C:/Users/samjg/Documents/My_Projects/Argopecten_hearbeat_rate/Argopecten_heartbeat_rate/RAnalysis/")
# load table
heart <- read.csv(file="Data/Post_insitu_experiment/Heartbeat_data/SUMMARY/Heartbeat_rate_intial_exposure_recovery_MEAN.csv", header=T) #read Size.info data
DF_means <- heart %>% dplyr::select(-c(1:2, 11:16)) # select the subtracted (corrected) hreat rate values and the insitu mean characteristics by site
heart.rates <- DF_means %>% dplyr::select(c(1:8)) # exposure hrs 1,2,3,8,9,15,16; recovery hr 1
vars <- DF_means %>% dplyr::select(c(9:37)) # 30 total variables (5 DO thresholds * 6 characteristics; mag, freq, % time, count, EQ)
Summary_TABLE <- data.frame() # run this before the loop
for(i in 1:ncol(heart.rates)){
for(m in 1:ncol(vars)) {
# loop linear regressions for rquared and p values
rsq <- summary(lm(heart.rates[,i] ~ vars[,m]))$r.squared
pval <- summary(lm(heart.rates[,i] ~ vars[,m]))$coef[2,"Pr(>|t|)"]
# assign the data table
RSQ.loop <- data.frame(matrix(nrow = 1, ncol = 4)) # create a new data table
colnames(RSQ.loop) <- c('heart.meas', 'hypoxia.characteristic', 'rsq', 'pval') # assign headers
RSQ.loop$heart.meas <- colnames(heart.rates[i])
RSQ.loop$hypoxia.characteristic <- colnames(vars[m])
RSQ.loop$rsq <- rsq
RSQ.loop$pval <- pval
# loop additions
df <- data.frame(RSQ.loop) # name dataframe for this single row
Summary_TABLE <- rbind(Summary_TABLE,df) # bind to a cumulative list dataframe
}# inside loop'
print(Summary_TABLE) # show loop progress in the console
}# outside loo
Summary_TABLE # loop product
### - create new summary table to filter out unwanted data (salininty, secchi depth, chl a, site depth)
#### Why? This data was not measured continuously during field acclimation and is not related to the 5 hypoxia thresholds for the heatmap
### - use tidyr::separate to divide the 'hypoxia.characteristic' to 'Descriptor' & 'DO_threshold' by
Summary_TABLE2 <- Summary_TABLE %>%
dplyr::filter(!hypoxia.characteristic  %in% c("Salinity", "secchi_depth", "site_depth", "chl_a_ug_l")) %>%
separate(hypoxia.characteristic, c("Descriptor", "DO_threshold"), "_")
# Create Heatmap
Summary_TABLE3 <- Summary_TABLE2 %>%  dplyr::filter(!Descriptor  %in% c("MeanConcentration", "EQ"))
Summary_TABLE3$rsq <- format(round(Summary_TABLE3$rsq, 3)) # sig figs for heat map
Summary_TABLE3$rsq <-as.numeric(Summary_TABLE3$rsq) # convert rsq to numeric
Summary_TABLE3$heart.meas = factor(Summary_TABLE3$heart.meas,
levels=c("SUB_1_hr_init", "SUB_2_hr_init", "SUB_3_hr_init", "SUB_8_hr",
"SUB_9_hr", "SUB_15_hr","SUB_16_hr", "Recovery_1_hr")) # order the hearbeat rate variables
levels(Summary_TABLE3$heart.meas) <- c("hour_1", "hour_2", "hour_3", "hour_8",
"hour_9", "hour_15","hour_16", "Recovery_hour_1")
Summary_TABLE3$Descriptor <- as.factor(Summary_TABLE3$Descriptor)
levels(Summary_TABLE3$Descriptor) <- c("frequency", "duration", "% time")
Summary_TABLE3$Descriptor <- as.character(Summary_TABLE3$Descriptor)
colnames(Summary_TABLE3)[2] <- "DCDO_descriptor"
RSQ_Heatmap_Plots <- Summary_TABLE3 %>% # run heat map
ggplot(aes(DCDO_descriptor,DO_threshold, fill = rsq)) + # the descritor and DO threhsolds and fill by the rsq values
geom_tile() + # tile command calls the data as a heat map
#labs(title=expression("Cardiac response patterns"~Delta*"HBRs")) +
scale_fill_gradient(low = "white", high = "grey50") + # heatmap as white to grey
facet_grid(. ~ heart.meas, scales = "free") + # heat map spectrum is determined by the data
geom_text(size=3, aes(label = rsq)) + # add rsq text to each heatmap segment
theme(axis.text.x = element_text(angle = 90)) # rotate x axis labels
RSQ_Heatmap_Plots # view plots
